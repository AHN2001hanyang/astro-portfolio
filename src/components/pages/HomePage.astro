---
import { Icon } from 'astro-icon/components';
import type { Project } from '~/data/projects';
import { projects } from '~/data/projects';

/* ✅ 本地头像：astro:assets 自动生成多尺寸、带占位 */
import { Image } from 'astro:assets';
import avatar from '~/assets/images/me.png';

/* ✅ 联系表单（Formspree） */
import ContactForm from '~/components/common/ContactForm.astro';

/** 入口页传入：多语言词典 */
const { t } = Astro.props as { t: any };

const all: Project[] = projects;
---

<style is:global>
  html { scroll-behavior: smooth; } /* 平滑滚动 */
</style>

<main id="top" class="relative px-4 py-16 sm:px-6 lg:px-8 lg:py-20">
  <!-- 滚动进度条 -->
  <div id="scroll-progress" class="fixed left-0 top-0 z-50 h-[3px] w-0 bg-blue-600"></div>

  <!-- 柔和渐变背景 -->
  <div aria-hidden="true"
       class="pointer-events-none absolute -top-24 left-1/2 -z-10 h-[420px] w-[1200px] -translate-x-1/2 blur-3xl"
       style="background: radial-gradient(600px 200px at 50% 40%, rgba(59,130,246,.18), transparent 70%);">
  </div>

  <!-- Hero -->
  <section class="reveal mx-auto max-w-4xl text-center">
    <h1 class="font-bold font-heading text-4xl md:text-5xl tracking-tight">
      {t.hero.name} · {t.hero.stack}
    </h1>
    <p class="mt-4 text-muted-foreground">{t.hero.subtitle}</p>

    <div class="mt-6 flex flex-wrap items-center justify-center gap-3">
      <a
        href="#projects"
        class="anchor-btn"
        data-analytics-event="cta_click"
        data-analytics-event-category="hero"
        data-analytics-event-label="projects"
      >
        {t.btn.projects}
      </a>
      <a
        href={t.links.github}
        target="_blank"
        rel="noopener"
        class="anchor-btn"
        data-analytics-event="cta_click"
        data-analytics-event-category="hero"
        data-analytics-event-label="github"
      >
        GitHub
      </a>
      <a
        href="#contact"
        class="anchor-btn"
        data-analytics-event="cta_click"
        data-analytics-event-category="hero"
        data-analytics-event-label="contact"
      >
        {t.btn.contact}
      </a>
    </div>
  </section>

  <!-- About -->
  <section id="about" class="reveal mx-auto mt-16 max-w-4xl scroll-mt-24">
    <div class="card-glass p-6 sm:p-8">
      <div class="grid gap-6 sm:grid-cols-[96px,1fr]">
        <!-- 头像 -->
        <Image
          src={avatar}
          alt="Jae AHN avatar"
          widths={[96, 128, 192]}
          sizes="(max-width: 640px) 96px, 128px"
          loading="eager"
          fetchpriority="high"
          placeholder="blur"
          class="h-24 w-24 rounded-2xl object-cover ring-1 ring-black/5 dark:ring-white/10"
        />
        <div>
          <h2 class="text-2xl font-semibold tracking-tight">{t.about.title}</h2>
          <p class="mt-2 text-sm text-muted-foreground">{t.about.desc}</p>
          <div class="mt-4 flex flex-wrap gap-2">
            {t.about.tags.map((x: string) => (
              <span class="chip">{x}</span>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Projects（数据驱动） -->
  <section id="projects" class="reveal mx-auto mt-16 max-w-6xl scroll-mt-24">
    <h2 class="text-2xl font-bold tracking-tight">{t.projects.title}</h2>
    <p class="mt-2 text-muted-foreground">{t.projects.subtitle}</p>

    <div class="mt-6 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {all.map((p) => (
        <article class="card group hover:shadow-lg reveal">
          {p.cover ? (
            <button class="cover-btn group/cover relative block aspect-video w-full overflow-hidden" aria-label={`Open ${p.title} cover`}>
              <img
                src={p.cover}
                alt={p.title}
                loading="lazy"
                decoding="async"
                referrerpolicy="no-referrer"
                class="h-full w-full object-cover transition-transform duration-300 group-hover/cover:scale-[1.02]"
              />
            </button>
          ) : (
            <div class="flex h-40 w-full items-center justify-center bg-gradient-to-br from-blue-50 to-purple-50 dark:from-slate-800 dark:to-slate-800">
              <div class="flex h-14 w-14 items-center justify-center rounded-2xl bg-blue-600 text-white shadow-lg">
                <Icon name={p.icon ?? 'tabler:folder'} class="h-7 w-7" />
              </div>
            </div>
          )}

          <div class="p-6">
            <h3 class="font-semibold">{p.title}</h3>
            <p class="mt-2 text-sm text-muted-foreground">{p.summary}</p>

            {p.tags && p.tags.length ? (
              <div class="mt-3 flex flex-wrap gap-2">
                {p.tags.map((t) => <span class="chip">{t}</span>)}
              </div>
            ) : null}

            <div class="mt-4 flex flex-wrap gap-4">
              {p.links.map((l) => (
                <a
                  class="inline-flex items-center gap-1 underline hover:opacity-80"
                  href={l.href}
                  target={l.target ?? '_self'}
                  rel="noopener"
                  data-analytics-event="project_link"
                  data-analytics-event-category="projects"
                  data-analytics-event-label={`${p.title} | ${l.label}`}
                >
                  {l.label} →
                </a>
              ))}
            </div>

            {p.repo ? (
              <div class="mt-3">
                <a href={`https://github.com/${p.repo}/stargazers`} target="_blank" rel="noopener">
                  <img
                    src={`https://img.shields.io/github/stars/${p.repo}?style=social`}
                    alt="GitHub stars"
                    loading="lazy"
                    decoding="async"
                  />
                </a>
              </div>
            ) : null}
          </div>
        </article>
      ))}
    </div>
  </section>

  <!-- Contact -->
  <section id="contact" class="reveal mx-auto mt-16 max-w-4xl scroll-mt-24 text-center">
    <h2 class="text-2xl font-bold tracking-tight">{t.contact.title}</h2>
    <p class="mt-2 text-muted-foreground">{t.contact.subtitle}</p>
    <div class="mt-4 flex items-center justify-center gap-3">
      <a
        href={t.links.email}
        class="anchor-btn"
        data-analytics-event="contact_link"
        data-analytics-event-category="contact"
        data-analytics-event-label="email"
      >
        Email
      </a>
      <a
        href={t.links.github}
        target="_blank"
        rel="noopener"
        class="anchor-btn"
        data-analytics-event="contact_link"
        data-analytics-event-category="contact"
        data-analytics-event-label="github"
      >
        GitHub
      </a>
    </div>

    <!-- ✅ 插入免后端联系表单 -->
    <ContactForm />

    <div class="mt-10">
      <a href="#top" class="text-sm underline opacity-70 hover:opacity-100">{t.contact.backToTop}</a>
    </div>
  </section>

  <!-- 浮动工具：主题开关 + 返回顶部 -->
  <div class="fixed bottom-4 right-4 z-50 flex flex-col gap-2">
    <button id="theme-toggle" class="btn-fab" aria-label="Toggle theme" title="Toggle theme">
      <Icon id="theme-icon-sun" name="tabler:sun" class="h-5 w-5" />
      <Icon id="theme-icon-moon" name="tabler:moon" class="h-5 w-5 hidden" />
    </button>
    <a href="#top" class="btn-fab" aria-label="Back to top" title="Back to top">
      <Icon name="tabler:arrow-up" class="h-5 w-5" />
    </a>
  </div>

  <!-- Lightbox 预览层 -->
  <div id="lightbox" class="lightbox hidden">
    <div class="lightbox-backdrop"></div>
    <div class="lightbox-stage">
      <img id="lightbox-img" alt="Preview" class="lightbox-img" />
      <button id="lightbox-close" class="btn-fab lightbox-close" aria-label="Close preview" title="Close">
        <Icon name="tabler:x" class="h-5 w-5" />
      </button>
    </div>
  </div>
</main>

<style>
  .anchor-btn { @apply inline-flex items-center rounded-xl border px-4 py-2 hover:shadow transition; }
  .chip { @apply rounded-full border px-2 py-0.5 text-xs; }
  .card { @apply relative overflow-hidden rounded-2xl border bg-white/60 p-0 shadow-sm transition dark:bg-slate-900/60; }
  .card-glass { @apply relative rounded-3xl border bg-gradient-to-b from-white/70 to-white/30 dark:from-slate-900/70 dark:to-slate-900/30 shadow-sm backdrop-blur; }
  .btn-fab { @apply inline-flex h-10 w-10 items-center justify-center rounded-full border bg-white/80 backdrop-blur hover:shadow transition dark:bg-slate-900/80; }

  /* 出场动画 */
  .reveal { opacity: 0; transform: translateY(8px); transition: opacity .5s ease, transform .5s ease; }
  .reveal.in { opacity: 1; transform: translateY(0); }

  /* Lightbox */
  .lightbox { @apply fixed inset-0 z-[60]; }
  .lightbox.hidden { display: none; }
  .lightbox-backdrop { @apply absolute inset-0 bg-black/70 backdrop-blur-sm; }
  .lightbox-stage { @apply relative z-10 flex h-full w-full items-center justify-center p-4; }
  .lightbox-img { @apply max-h-[85vh] max-w-[90vw] rounded-xl; }
  .lightbox-close { @apply absolute top-4 right-4; }
</style>

<!-- 交互：进度条、显现动画、主题切换、Lightbox -->
<script>
  // ===== 滚动进度条 =====
  const progress = document.getElementById('scroll-progress');
  const updateProgress = () => {
    const h = document.documentElement;
    const scrolled = h.scrollTop / (h.scrollHeight - h.clientHeight);
    progress.style.width = (scrolled * 100) + '%';
  };
  document.addEventListener('scroll', updateProgress, { passive: true });
  updateProgress();

  // ===== 显现动画 =====
  const io = new IntersectionObserver((entries) => {
    entries.forEach((e) => { if (e.isIntersecting) e.target.classList.add('in'); });
  }, { rootMargin: '0px 0px -10% 0px', threshold: 0.05 });
  document.querySelectorAll('.reveal').forEach((el) => io.observe(el));

  // ===== 主题切换（持久化）=====
  const root = document.documentElement;
  const btn = document.getElementById('theme-toggle');
  const sun = document.getElementById('theme-icon-sun');
  const moon = document.getElementById('theme-icon-moon');
  const applyTheme = (mode) => {
    if (mode === 'dark') root.classList.add('dark'); else root.classList.remove('dark');
    localStorage.setItem('theme', mode);
    const isDark = mode === 'dark';
    sun.classList.toggle('hidden', isDark);
    moon.classList.toggle('hidden', !isDark);
  };
  const saved = localStorage.getItem('theme');
  if (saved) applyTheme(saved);
  else applyTheme(window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    const userSet = localStorage.getItem('theme');
    if (!userSet) applyTheme(e.matches ? 'dark' : 'light');
  });
  btn?.addEventListener('click', () => {
    const isDark = root.classList.contains('dark');
    applyTheme(isDark ? 'light' : 'dark');
  });

  // ===== Lightbox 预览 =====
  const lightbox = document.getElementById('lightbox');
  const imgEl = document.getElementById('lightbox-img');
  const closeBtn = document.getElementById('lightbox-close');

  document.querySelectorAll('.cover-btn').forEach((btn) => {
    btn.addEventListener('click', () => {
      const img = btn.querySelector('img');
      if (!img) return;
      imgEl.src = img.currentSrc || img.src;
      lightbox.classList.remove('hidden');
    });
  });

  const closeLightbox = () => { lightbox.classList.add('hidden'); imgEl.src = ''; };
  closeBtn?.addEventListener('click', closeLightbox);
  lightbox.addEventListener('click', (e) => {
    if (e.target === lightbox || e.target.classList.contains('lightbox-backdrop')) closeLightbox();
  });
  document.addEventListener('keydown', (e) => { if (e.key === 'Escape') closeLightbox(); });
</script>
